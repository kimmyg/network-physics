var Map = require('map').Map;

function Simulation() {
	this.clients = new Map();

	var self = this;

	this.client_onConnection = function( ws ) {
		self.addClient( ws );
	};

	this.client_onMessage = function( message ) {
		self.handle( this, message );
	};

	this.client_onClose = function() {
		self.removeClient( this );
	};

	this.self_onUpdate = function() {
		self.update( new Date().valueOf() );
	};
}

Simulation.prototype.start = function() {
	this.init( new Date().valueOf() );

	this.updateHandle = setInterval( this.self_onUpdate, 50 );
}

Simulation.prototype.init = function( t ) {
	this.t0 = t;

	// init

	// broadcast
}

Simulation.prototype.update = function( t ) {
	var dt = t - this.t0;
	this.t0 = t;

	if( Math.random() < 0.01 ) {
		console.log( dt );
	}

	// update

	// broadcast
}

Simulation.prototype.addClient = function( client ) {
	client.on( 'message', this.client_onMessage );
	client.on( 'close', this.client_onClose );	

	this.clients.set( client, null );
}

Simulation.prototype.handle = function( client, message ) {
	console.log( message );
}

Simulation.prototype.removeClient = function( client ) {
	this.clients.delete( client );
}

Simulation.prototype.broadcast = function( message ) {
	this.clients.each( function( client ) {
		client.send( message );
	});
}

exports.Simulation = Simulation;
